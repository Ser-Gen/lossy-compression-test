#!/usr/bin/python
# Written by Josh Aas
# Copyright (c) 2013, Mozilla Corporation
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the Mozilla Corporation nor the names of its
#    contributors may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import os
import sys
import array

def main(argv):
  if len(argv) < 2:
    print "Usage: List of files generated by rd_generate.py"
    return

  pixel_total = array.array('l')
  file_size_total = array.array('l')
  yssim_total = array.array('d')
  rgb_ssim_total = array.array('d')
  psnrhvsm_total = array.array('d')
  msssim_total = array.array('d')

  file = open(argv[1], "r")
  for line in file:
    values = line.rstrip().split()
    pixel_total.append(long(values[0]))
    file_size_total.append(long(values[1]))
    yssim_total.append(float(values[2]) * long(values[0]))
    rgb_ssim_total.append(float(values[3]) * long(values[0]))
    psnrhvsm_total.append(float(values[4]) * long(values[0]))
    msssim_total.append(float(values[5]) * long(values[0]))
  file.close()

  for path in argv[2:]:
    file = open(path, "r")
    i = 0
    for line in file:
      values = line.rstrip().split()
      pixel_total[i] += long(values[0])
      file_size_total[i] += long(values[1])
      yssim_total[i] += float(values[2]) * long(values[0])
      rgb_ssim_total[i] += float(values[3]) * long(values[0])
      psnrhvsm_total[i] += float(values[4]) * long(values[0])
      msssim_total[i] += float(values[5]) * long(values[0])
      i += 1
    file.close()

  file_count = len(argv) - 1
  i = 0
  while i < len(pixel_total):
    print "%d %d %f %f %f %f" % (pixel_total[i] / file_count,
                                 file_size_total[i] / file_count,
                                 yssim_total[i] / pixel_total[i],
                                 rgb_ssim_total[i] / pixel_total[i],
                                 psnrhvsm_total[i] / pixel_total[i],
                                 msssim_total[i] / pixel_total[i])
    i += 1

if __name__ == "__main__":
  main(sys.argv)

